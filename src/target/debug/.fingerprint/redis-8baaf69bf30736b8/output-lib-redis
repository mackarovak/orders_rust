{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/aio.rs","byte_start":12546,"byte_end":12668,"line_start":391,"line_end":394,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::ResponseError,","highlight_start":1,"highlight_end":42},{"text":"                \"Redis server refused to switch database\"","highlight_start":1,"highlight_end":58},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/aio.rs:391:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::ResponseError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Redis server refused to switch database\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/cmd.rs","byte_start":21499,"byte_end":21626,"line_start":664,"line_end":667,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::ResponseError,","highlight_start":1,"highlight_end":42},{"text":"                \"Invalid response when parsing multi response\"","highlight_start":1,"highlight_end":63},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/cmd.rs:664:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m664\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m665\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::ResponseError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m666\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Invalid response when parsing multi response\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m667\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":4364,"byte_end":4430,"line_start":130,"line_end":130,"column_start":23,"column_end":89,"is_primary":false,"text":[{"text":"            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),","highlight_start":23,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:130:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":4992,"byte_end":5058,"line_start":153,"line_end":153,"column_start":23,"column_end":89,"is_primary":false,"text":[{"text":"            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),","highlight_start":23,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:153:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":5247,"byte_end":5306,"line_start":161,"line_end":161,"column_start":17,"column_end":76,"is_primary":false,"text":[{"text":"        None => fail!((ErrorKind::InvalidClientConfig, \"Missing hostname\")),","highlight_start":17,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:161:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        None => fail!((ErrorKind::InvalidClientConfig, \"Missing hostname\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":6811,"byte_end":6946,"line_start":207,"line_end":210,"column_start":27,"column_end":19,"is_primary":false,"text":[{"text":"                Err(_) => fail!((","highlight_start":27,"highlight_end":34},{"text":"                    ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":52},{"text":"                    \"Username is not valid UTF-8 string\"","highlight_start":1,"highlight_end":57},{"text":"                )),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:207:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                Err(_) => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m___________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"Username is not valid UTF-8 string\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":7191,"byte_end":7326,"line_start":216,"line_end":219,"column_start":27,"column_end":19,"is_primary":false,"text":[{"text":"                Err(_) => fail!((","highlight_start":27,"highlight_end":34},{"text":"                    ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":52},{"text":"                    \"Password is not valid UTF-8 string\"","highlight_start":1,"highlight_end":57},{"text":"                )),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:216:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                Err(_) => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m___________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"Password is not valid UTF-8 string\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":8668,"byte_end":8788,"line_start":259,"line_end":262,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":48},{"text":"                \"URL provided is not a redis URL\"","highlight_start":1,"highlight_end":50},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:259:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"URL provided is not a redis URL\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":18898,"byte_end":19007,"line_start":554,"line_end":557,"column_start":14,"column_end":11,"is_primary":false,"text":[{"text":"        _ => fail!((","highlight_start":14,"highlight_end":21},{"text":"            ErrorKind::AuthenticationFailed,","highlight_start":1,"highlight_end":45},{"text":"            \"Password authentication failed\",","highlight_start":1,"highlight_end":46},{"text":"        )),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:554:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m______________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ErrorKind::AuthenticationFailed,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Password authentication failed\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m557\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs","byte_start":19635,"byte_end":19757,"line_start":583,"line_end":586,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::ResponseError,","highlight_start":1,"highlight_end":42},{"text":"                \"Redis server refused to switch database\"","highlight_start":1,"highlight_end":58},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/connection.rs:583:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::ResponseError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Redis server refused to switch database\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32857,"byte_end":32898,"line_start":1025,"line_end":1025,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1025:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1025\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32857,"byte_end":32898,"line_start":1025,"line_end":1025,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1025:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1025\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32857,"byte_end":32898,"line_start":1025,"line_end":1025,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1025:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1025\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32996,"byte_end":33025,"line_start":1033,"line_end":1033,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1033:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32996,"byte_end":33025,"line_start":1033,"line_end":1033,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1033:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32996,"byte_end":33025,"line_start":1033,"line_end":1033,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1033:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33027,"byte_end":33057,"line_start":1034,"line_end":1034,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1034:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1034\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33027,"byte_end":33057,"line_start":1034,"line_end":1034,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1034:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1034\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33027,"byte_end":33057,"line_start":1034,"line_end":1034,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1034:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1034\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33059,"byte_end":33089,"line_start":1035,"line_end":1035,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1035:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33059,"byte_end":33089,"line_start":1035,"line_end":1035,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1035:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33059,"byte_end":33089,"line_start":1035,"line_end":1035,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1035:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33091,"byte_end":33121,"line_start":1036,"line_end":1036,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1036:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1036\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33091,"byte_end":33121,"line_start":1036,"line_end":1036,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1036:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1036\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33091,"byte_end":33121,"line_start":1036,"line_end":1036,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1036:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1036\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33123,"byte_end":33153,"line_start":1037,"line_end":1037,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1037:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1037\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33123,"byte_end":33153,"line_start":1037,"line_end":1037,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1037:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1037\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33123,"byte_end":33153,"line_start":1037,"line_end":1037,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1037:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1037\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33155,"byte_end":33185,"line_start":1038,"line_end":1038,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33155,"byte_end":33185,"line_start":1038,"line_end":1038,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33155,"byte_end":33185,"line_start":1038,"line_end":1038,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33187,"byte_end":33217,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33187,"byte_end":33217,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33187,"byte_end":33217,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33219,"byte_end":33250,"line_start":1040,"line_end":1040,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33219,"byte_end":33250,"line_start":1040,"line_end":1040,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33219,"byte_end":33250,"line_start":1040,"line_end":1040,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33252,"byte_end":33283,"line_start":1041,"line_end":1041,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33252,"byte_end":33283,"line_start":1041,"line_end":1041,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33252,"byte_end":33283,"line_start":1041,"line_end":1041,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33285,"byte_end":33315,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33285,"byte_end":33315,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33285,"byte_end":33315,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33317,"byte_end":33347,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33317,"byte_end":33347,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33317,"byte_end":33347,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33349,"byte_end":33381,"line_start":1044,"line_end":1044,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33349,"byte_end":33381,"line_start":1044,"line_end":1044,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33349,"byte_end":33381,"line_start":1044,"line_end":1044,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32123,"byte_end":32179,"line_start":1002,"line_end":1002,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33383,"byte_end":33415,"line_start":1045,"line_end":1045,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32334,"byte_end":32390,"line_start":1006,"line_end":1006,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33383,"byte_end":33415,"line_start":1045,"line_end":1045,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32424,"byte_end":32491,"line_start":1008,"line_end":1008,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32688,"byte_end":32729,"line_start":1017,"line_end":1017,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33383,"byte_end":33415,"line_start":1045,"line_end":1045,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":32514,"byte_end":32551,"line_start":1013,"line_end":1013,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":31842,"byte_end":31888,"line_start":995,"line_end":995,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":33827,"byte_end":33886,"line_start":1058,"line_end":1058,"column_start":21,"column_end":80,"is_primary":false,"text":[{"text":"                    invalid_type_error!(v, \"Response status not valid boolean\");","highlight_start":21,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1058:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1058\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    invalid_type_error!(v, \"Response status not valid boolean\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":34141,"byte_end":34201,"line_start":1067,"line_end":1067,"column_start":21,"column_end":81,"is_primary":false,"text":[{"text":"                    invalid_type_error!(v, \"Response type not bool compatible.\");","highlight_start":21,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1067:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1067\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    invalid_type_error!(v, \"Response type not bool compatible.\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":34289,"byte_end":34349,"line_start":1071,"line_end":1071,"column_start":18,"column_end":78,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not bool compatible.\"),","highlight_start":18,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1071:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1071\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not bool compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":34680,"byte_end":34742,"line_start":1082,"line_end":1082,"column_start":18,"column_end":80,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not string compatible.\"),","highlight_start":18,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1082:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1082\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not string compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":35176,"byte_end":35238,"line_start":1094,"line_end":1094,"column_start":25,"column_end":87,"is_primary":false,"text":[{"text":"                None => invalid_type_error!(v, \"Response type not vector compatible.\"),","highlight_start":25,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1094:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1094\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                None => invalid_type_error!(v, \"Response type not vector compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":35390,"byte_end":35452,"line_start":1098,"line_end":1098,"column_start":18,"column_end":80,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not vector compatible.\"),","highlight_start":18,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1098:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1098\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not vector compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38017,"byte_end":38075,"line_start":1174,"line_end":1174,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38449,"byte_end":38494,"line_start":1183,"line_end":1183,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":38859,"byte_end":38921,"line_start":1193,"line_end":1193,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39842,"byte_end":39882,"line_start":1219,"line_end":1219,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39495,"byte_end":39539,"line_start":1211,"line_end":1211,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39888,"byte_end":39970,"line_start":1222,"line_end":1222,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":39754,"byte_end":39798,"line_start":1218,"line_end":1218,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":37299,"byte_end":37338,"line_start":1159,"line_end":1159,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/ksenia/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.19.0/src/types.rs:1222:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
